spring:
  application:
    name: 'store'

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: org.apache.commons.dbcp2.BasicDataSource  # 사용할 데이터 소스 타입 (DBCP2)
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  #기본으로 실행할 프로필
  profiles:
    active: dev

server:
  port: 8090

logging:
  file:
    path: ${user.dir}/logs/${spring.application.name}
  level:
    org.springframework.amqp: DEBUG


##엘라스틱 설정
elasticsearch:
  enabled: false
  host: "localhost"
  port: 9200


#공통 설정 내용
management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health, info, shutdown, prometheus
  endpoint:
    shutdown:
      enabled: true
    prometheus:
      enabled: true

#swagger 설정
springdoc:
  packages-to-scan: store.novabook
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  api-docs:
    path: /api-docs


#유레카 활성화
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

---
# mysql
spring:
  config:
    activate:
      on-profile: dev

---
rabbitmq:
  queue:
    couponCreateNormal: nova.coupon.create.normal.queue
    couponCreateHighTraffic: nova.coupon.create.hightraffic.queue
    couponRegisterNormal: nova.coupon.register.normal.queue
    couponRegisterHighTraffic: nova.coupon.register.hightraffic.queue
    deadLetter: nova.coupon.deadletter.queue
  exchange:
    couponOperation: nova.coupon.operation.exchange
    deadLetter: nova.coupon.deadletter.exchange
  routing:
    couponCreateNormal: coupon.create.normal
    couponCreateHighTraffic: coupon.create.hightraffic
    couponRegisterNormal: coupon.register.normal
    couponRegisterHighTraffic: coupon.register.hightraffic
